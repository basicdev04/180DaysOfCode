// Given an array arr[] of N non-negative integers representing the height of blocks. If width of each block is 1, compute how much water can be trapped between the blocks during the rainy season

long long trappingWater(int arr[], int n){
        // code here
        long long total=0;
        int lmax[n],rmax[n];
        lmax[0]=arr[0];
        rmax[n-1]=arr[n-1];
        for(int i=1;i<n;i++)
        {
            lmax[i]=max(lmax[i-1],arr[i]);
        }
        for(int i=n-2;i>=0;i--)
        {
            rmax[i]=max(rmax[i+1],arr[i]);
        }
        for(int i=0;i<n;i++)
        {
            total+=min(lmax[i],rmax[i])-arr[i];
        }
        return total;

        
    }
